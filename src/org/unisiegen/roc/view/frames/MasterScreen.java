/* 
 * Institute of Knowledge Based Systems and Knowledge Management,
 * Department of Electrical Engineering and Computer Science,
 * Faculty of Science and Technology, University of Siegen, Germany
 * Winter Semester 2015/16  Â© 2015-2016 | All right reserved for University of Siegen
 */
package org.unisiegen.roc.view.frames;

import javax.swing.DefaultDesktopManager;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import org.unisiegen.roc.controller.MainController;

/**
 * Main JFrame which displays the UI as per user interaction.
 *
 * @author Pratik
 */
public class MasterScreen extends javax.swing.JFrame {

    // <editor-fold desc="Constructors">
    /**
     * Creates new form MasterScreen
     */
    public MasterScreen() {
        super("RoC");
        initComponents();
        control = new MainController();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        masterDesktopPane.setPreferredSize(getMaximumSize());
        masterDesktopPane.setDesktopManager(new AvoidDragDesktopManager());
        loggingPanel.setLocation(0, 0);
        control.addFrameToPane(masterDesktopPane, "LoginScreen");
    }
    // </editor-fold>

    // <editor-fold desc="NetBeans Auto Generated Code">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        masterDesktopPane = new javax.swing.JDesktopPane();
        loggingPanel = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        commonMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        createWorkOrder_menuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        exit_menuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpDesk_menuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        aboutUs_menuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(730, 700));

        masterDesktopPane.setBackground(new java.awt.Color(204, 204, 255));

        loggingPanel.setBackground(new java.awt.Color(204, 204, 255));
        loggingPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        userLabel.setFont(new java.awt.Font("Siemens Slab Black", 2, 14)); // NOI18N
        userLabel.setText("Username");

        logoutButton.setBackground(new java.awt.Color(204, 0, 0));
        logoutButton.setFont(new java.awt.Font("Siemens TIA Portal Basic", 1, 12)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("LOGOUT");
        logoutButton.setToolTipText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loggingPanelLayout = new javax.swing.GroupLayout(loggingPanel);
        loggingPanel.setLayout(loggingPanelLayout);
        loggingPanelLayout.setHorizontalGroup(
            loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loggingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 626, Short.MAX_VALUE)
                .addComponent(logoutButton)
                .addContainerGap())
        );
        loggingPanelLayout.setVerticalGroup(
            loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loggingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loggingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(logoutButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout masterDesktopPaneLayout = new javax.swing.GroupLayout(masterDesktopPane);
        masterDesktopPane.setLayout(masterDesktopPaneLayout);
        masterDesktopPaneLayout.setHorizontalGroup(
            masterDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loggingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        masterDesktopPaneLayout.setVerticalGroup(
            masterDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(masterDesktopPaneLayout.createSequentialGroup()
                .addComponent(loggingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 353, Short.MAX_VALUE))
        );
        masterDesktopPane.setLayer(loggingPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        commonMenuBar.setBackground(new java.awt.Color(204, 204, 255));
        commonMenuBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        fileMenu.setText("File");

        createWorkOrder_menuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        createWorkOrder_menuItem.setText("Create Work Order");
        createWorkOrder_menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createWorkOrder_menuItemActionPerformed(evt);
            }
        });
        fileMenu.add(createWorkOrder_menuItem);
        fileMenu.add(jSeparator4);

        exit_menuItem.setText("Exit");
        exit_menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_menuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exit_menuItem);

        commonMenuBar.add(fileMenu);

        helpMenu.setText("Help");

        helpDesk_menuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        helpDesk_menuItem.setText("RoC Help Desk");
        helpDesk_menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpDesk_menuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpDesk_menuItem);
        helpMenu.add(jSeparator1);

        aboutUs_menuItem.setText("About Us");
        aboutUs_menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutUs_menuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutUs_menuItem);

        commonMenuBar.add(helpMenu);

        setJMenuBar(commonMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterDesktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterDesktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // </editor-fold>
    // <editor-fold desc="Events">
    /**
     * Logout button action event.
     *
     * @param evt Action Event
     */
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        loggingBarActivate(false, "");
        masterDesktopPane.getAllFrames()[0].dispose();
        control.addFrameToPane(masterDesktopPane, "LoginScreen");
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * Create work order action event.
     *
     * @param evt Action Event
     */
    private void createWorkOrder_menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createWorkOrder_menuItemActionPerformed
        masterDesktopPane.getAllFrames()[0].dispose();
        control.addFrameToPane(masterDesktopPane, "WorkOrderScreen");
    }//GEN-LAST:event_createWorkOrder_menuItemActionPerformed

    /**
     * Exit menu item action event.
     *
     * @param evt Action Event
     */
    private void exit_menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_menuItemActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_exit_menuItemActionPerformed

    /**
     * About us menu item action event.
     *
     * @param evt Action event
     */
    private void aboutUs_menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutUs_menuItemActionPerformed
        Object[] option = {"Close"};
        JOptionPane.showOptionDialog(this,
                "<html><h1>ABOUT US</h1></html> \n"
                + "\n"
                + "<html><h2>RoC (Robot Use Customer Feedback Software)</h2></br><h4>Version: RoC.1.000</h4></br></html>\n"
                + "<html><h3>Project Group for the course of Software Engineering</h3></html>\n"
                + "Group G:\n"
                + "Prakash Patil  - 1179435\n"
                + "Pradeep Patil  - 1178496\n"
                + "Pushkar Bhatt  - 1177895\n"
                + "Ankit Patel  - 1178508\n"
                + "Pratik Pradhan  - 1179448\n\n"
                + "Supervisors: \n"
                + "Prof. Dr.-Ing. Madjid Fathi \n"
                + "Dr.-Ing. Fazel Ansari\n"
                + "Sisay Chala\n\n"
                + "Institute of Knowledge Based Systems and Knowledge Management,\n"
                + "Department of Electrical Engineering and Computer Science,\n"
                + "Faculty of Science and Technology, University of Siegen, Germany\n"
                + "<html><h5>Winter Semester 2015/16</h5></br><h5>Â© 2015-2016 | All right reserved for University of Siegen </h5></html>",
                "About", JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                option, option[0]);
    }//GEN-LAST:event_aboutUs_menuItemActionPerformed

    /**
     * Help desk menu item action event.
     * @param evt Action event
     */
    private void helpDesk_menuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpDesk_menuItemActionPerformed
        String[] commands = {"cmd", "/c", "ROC_Helpdesk.chm"};
        try {
            Runtime.getRuntime().exec(commands);
//Runtime.getRuntime().exec("C:\\Users\\Riyasam\\Documents\\NetBeansProjects\\SwingTest\\src\\Test\\RealWorld.chm");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "RoC Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_helpDesk_menuItemActionPerformed

    // </editor-fold>
    // <editor-fold desc="Private Methods">
    // </editor-fold>
    // <editor-fold desc="Public Methods">
    /**
     * Method to control enabling of menu items.
     *
     * @param activationFlag Activation Flag if set will enable menu item
     */
    public static void deactivateMenuItem(boolean activationFlag) {
        createWorkOrder_menuItem.setEnabled(activationFlag);
        helpMenu.setEnabled(activationFlag);
    }

    /**
     * Method to control visibility of logging bar.
     *
     * @param flag Enable or disable the logging bar as per flag setting
     * @param name Logged in user name
     */
    public static void loggingBarActivate(boolean flag, String name) {
        loggingPanel.setVisible(flag);
        if (name != null && !name.isEmpty()) {
            userLabel.setText(name);
        }
    }

    // </editor-fold>
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MasterScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MasterScreen().setVisible(true);
            }
        });
    }

    /**
     * Class to avoid dragging operation of the internal frames placed in the
     * desktop pane.
     */
    class AvoidDragDesktopManager extends DefaultDesktopManager {

        @Override
        public void beginDraggingFrame(JComponent object) {
            if (!"fixed".equals(object.getClientProperty("dragMode"))) {
                super.beginDraggingFrame(object);
            }
        }

        @Override
        public void dragFrame(JComponent object, int newX, int newY) {
            if (!"fixed".equals(object.getClientProperty("dragMode"))) {
                super.dragFrame(object, newX, newY);
            }
        }

        @Override
        public void endDraggingFrame(JComponent object) {
            if (!"fixed".equals(object.getClientProperty("dragMode"))) {
                super.endDraggingFrame(object);
            }
        }
    }

    private final MainController control;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutUs_menuItem;
    private javax.swing.JMenuBar commonMenuBar;
    private static javax.swing.JMenuItem createWorkOrder_menuItem;
    private javax.swing.JMenuItem exit_menuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem helpDesk_menuItem;
    private static javax.swing.JMenu helpMenu;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private static javax.swing.JPanel loggingPanel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JDesktopPane masterDesktopPane;
    private static javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
