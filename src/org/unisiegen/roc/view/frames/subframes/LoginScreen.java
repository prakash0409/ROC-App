/* 
 * Institute of Knowledge Based Systems and Knowledge Management,
 * Department of Electrical Engineering and Computer Science,
 * Faculty of Science and Technology, University of Siegen, Germany
 * Winter Semester 2015/16  Â© 2015-2016 | All right reserved for University of Siegen
 */
package org.unisiegen.roc.view.frames.subframes;

import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.unisiegen.roc.controller.MainController;
import org.unisiegen.roc.domain.User;
import org.unisiegen.roc.exception.RocException;
import org.unisiegen.roc.view.frames.MasterScreen;

/**
 * Provides user interface for logging into application.
 *
 * @author Pratik
 */
public class LoginScreen extends javax.swing.JInternalFrame {

    // <editor-fold desc="Constructors">
    /**
     * Creates new form LoginFrame
     */
    public LoginScreen() {
        super("Log-in RoC");
        control = new MainController();
        frameDecorationRemoval();
        initComponents();        
        configureComponents();
    }    

    // </editor-fold>
    // <editor-fold desc="NetBeans Auto Generated Code">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPanel = new javax.swing.JPanel();
        loginHeaderLabel = new javax.swing.JLabel();
        userLoginPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(0, 51, 51));

        loginPanel.setBackground(new java.awt.Color(0, 51, 51));
        loginPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51), new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51)));

        loginHeaderLabel.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        loginHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        loginHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginHeaderLabel.setText("Robot Use Customer Feedback");

        userLoginPanel.setBackground(new java.awt.Color(0, 51, 51));
        userLoginPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51), new java.awt.Color(0, 102, 51), new java.awt.Color(0, 153, 51)), "User Login", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        userLoginPanel.setMaximumSize(new java.awt.Dimension(270, 210));
        userLoginPanel.setMinimumSize(new java.awt.Dimension(270, 210));

        usernameLabel.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setText("Username");

        usernameText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        passwordLabel.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password");

        loginButton.setBackground(new java.awt.Color(0, 102, 0));
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("LOGIN");
        loginButton.setToolTipText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginButtonKeyPressed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(0, 102, 0));
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("CANCEL");
        cancelButton.setToolTipText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        passwordField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout userLoginPanelLayout = new javax.swing.GroupLayout(userLoginPanel);
        userLoginPanel.setLayout(userLoginPanelLayout);
        userLoginPanelLayout.setHorizontalGroup(
            userLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLoginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordField)
                    .addComponent(usernameText)
                    .addGroup(userLoginPanelLayout.createSequentialGroup()
                        .addGroup(userLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(userLoginPanelLayout.createSequentialGroup()
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        userLoginPanelLayout.setVerticalGroup(
            userLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLoginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(userLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(cancelButton))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userLoginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(363, 363, 363))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(userLoginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // </editor-fold>
    // <editor-fold desc="Private Methods">
    /**
     * Method to remove unnecessary internal frame decoration.
     */
    private void frameDecorationRemoval() {
        control.removeInternalFrameDecoration(this);        
    }
    
    /**
     * Method to verify user for logging into application.
     */
    private void loginUser() {        
        String userCredential = String.valueOf(passwordField.getPassword());
        String userName = usernameText.getText().trim();
        String errorMessage = userName.isEmpty() ? "Please enter user name!!\n" : "";
        errorMessage += userCredential.isEmpty() ? "Please enter password!!\n" : "";
        if (!userCredential.isEmpty() && !userName.isEmpty() && errorMessage.isEmpty()) {
            endUser = new User();
            endUser.setPassword(userCredential);
            endUser.setUserName(userName);
            try {
                if (control.validateUser(endUser)) {
                    JOptionPane.showMessageDialog(this, "Login success!!", "RoC Message", JOptionPane.INFORMATION_MESSAGE);
                    JDesktopPane desktopPane = this.getDesktopPane();
                    if (desktopPane != null) {
                        MasterScreen.loggingBarActivate(true, endUser.getFirstName() + " " + endUser.getLastName());
                        control.addFrameToPane(desktopPane, "MainMenuScreen");
                        this.dispose();
                    }
                } else {
                    errorMessage += "Invalid credentials!!\nTry again..\n";                    
                }
            } catch (RocException ex) {
                Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
                errorMessage += ex.getMessage();
            }
        }        
        if (!errorMessage.isEmpty()) {
            JOptionPane.showMessageDialog(this, errorMessage, "RoC Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Method to initialize components.
     */
    private void configureComponents() {
        loginPanel.setLayout(new BorderLayout());
        loginPanel.add(loginHeaderLabel, BorderLayout.NORTH);
        JPanel samplePanel = new JPanel();
        samplePanel.setBackground(new java.awt.Color(0, 51, 51));
        userLoginPanel.setSize(270, 210);
        samplePanel.add(userLoginPanel);
        loginPanel.add(samplePanel, BorderLayout.CENTER);
    }
    // </editor-fold>
    // <editor-fold desc="Public Methods">
    /**
     * Method to get user details.
     * @return User details
     */
    public static User getUserDetails() {
        return endUser;
    }

    // </editor-fold>
    // <editor-fold desc="Events">

    /**
     * Login button action event.
     * @param evt Action event
     */
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        loginUser();
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * Cancel button action event.
     * @param evt Action event
     */
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        usernameText.setText("");
        passwordField.setText("");
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Login button key press event.
     * @param evt Key event
     */
    private void loginButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loginUser();
        }
    }//GEN-LAST:event_loginButtonKeyPressed

    /**
     * Password field key press event.
     * @param evt Key event
     */
    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loginUser();
        }
    }//GEN-LAST:event_passwordFieldKeyPressed

    // </editor-fold>
    private final MainController control;
    private static User endUser;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginHeaderLabel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel userLoginPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables
}
